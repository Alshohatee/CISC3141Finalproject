{"mappings":"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","sources":["main.js"],"sourcesContent":["var countriesHolder = document.getElementById(\"country-holder\");\nvar AllCountriesDataHolder = []\n\nfetch(\"https://covid-193.p.rapidapi.com/statistics\", {\n        \"method\": \"GET\",\n        \"headers\": {\n            \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\n            \"x-rapidapi-key\": \"fa25957e81msh7574df0c132647bp1d2905jsnedab3de64590\"\n        }\n    })\n    .then(response => response.json().then(data => {\n\n        console.log(data)\n        console.log(data.response)\n        let countries_stat = data.response;\n        AllCountriesDataHolder.push(data)\n            //ordering the unsorting data in the api\n        countries_stat.sort((a, b) => (a.cases.active < b.cases.active) ? 1 : (a.cases.active === b.cases.active) ? ((a.cases.active < b.cases.active) ? 1 : -1) : -1)\n            //Getting all the country statistic using a loop\n        for (let i = 1; i < countries_stat.length; i++) {\n            console.log(countries_stat[i]);\n\n            var newCase = numToCommas((countries_stat[i].cases.new !== null) ? countries_stat[i].cases.new : 0)\n            activeCase = numToCommas((countries_stat[i].cases.active !== null) ? countries_stat[i].cases.active : 0)\n            criticalCase = numToCommas((countries_stat[i].cases.critical !== null) ? countries_stat[i].cases.critical : 0)\n            recoveredCase = numToCommas((countries_stat[i].cases.recovered !== null) ? countries_stat[i].cases.recovered : 0)\n            deathsCaseNew = numToCommas((countries_stat[i].deaths.new !== null) ? countries_stat[i].deaths.new : 0)\n            deathsCasetotal = numToCommas((countries_stat[i].deaths.total !== null) ? countries_stat[i].deaths.total : 0)\n            count = countries_stat[i].country\n            fillData(count, newCase, activeCase, criticalCase, recoveredCase, deathsCaseNew, deathsCasetotal)\n        }\n    })).catch(err => {\n        console.log(err);\n    });\n\n\n\nfunction fillData(count, newCase, activeCase, criticalCase, recoveredCase, deathsCaseNew, deathsCasetotal) {\n\n    countPara = document.createElement('h2')\n    newCasePara = document.createElement('p')\n    activeCasePara = document.createElement('p')\n    criticalCasePara = document.createElement('p')\n    recoveredCasePara = document.createElement('p')\n    deathsCaseNewPara = document.createElement('p')\n    deathsCasetotalPara = document.createElement('p')\n\n\n    newCasePara.setAttribute(\"class\", \"grid-item\")\n    activeCasePara.setAttribute(\"class\", \"grid-item\")\n    criticalCasePara.setAttribute(\"class\", \"grid-item\")\n    recoveredCasePara.setAttribute(\"class\", \"grid-item recover\")\n    deathsCaseNewPara.setAttribute(\"class\", \"grid-item\")\n    deathsCasetotalPara.setAttribute(\"class\", \"grid-item\")\n\n\n    countPara.innerHTML = ` ${count}`\n    newCasePara.innerHTML = ` New: ${newCase}`\n    activeCasePara.innerHTML = `Active: ${activeCase}`\n    criticalCasePara.innerHTML = `Critical: ${criticalCase}`\n    recoveredCasePara.innerHTML = `Recovered: ${recoveredCase}`\n    deathsCasetotalPara.innerHTML = `Deaths: ${deathsCaseNew}`\n    deathsCaseNewPara.innerHTML = `Total Deaths: ${deathsCasetotal}`\n\n    var eachCountryData = document.createElement('div')\n    var DataHolder = document.createElement('div')\n    DataHolder.setAttribute(\"class\", \"grid-container\")\n    eachCountryData.style.width = \"100%\"\n    eachCountryData.style.height = \"300px\"\n    eachCountryData.setAttribute(\"class\", \"country-holder\")\n    eachCountryData.setAttribute(\"id\", count)\n\n    eachCountryData.appendChild(countPara)\n    DataHolder.appendChild(recoveredCasePara)\n    DataHolder.appendChild(newCasePara)\n    DataHolder.appendChild(activeCasePara)\n    DataHolder.appendChild(criticalCasePara)\n    DataHolder.appendChild(deathsCaseNewPara)\n    DataHolder.appendChild(deathsCasetotalPara)\n    eachCountryData.appendChild(DataHolder)\n    countriesHolder.appendChild(eachCountryData)\n\n}\n\n\nfunction numToCommas(num) {\n    num = Number(num)\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\n//basic map config with custom fills, mercator projection\nvar map = new Datamap({\n    scope: 'world',\n    element: document.getElementById('container1'),\n    projection: 'mercator',\n    height: 233,\n    width: 233,\n    fills: {\n        defaultFill: '#580009'\n    },\n    geographyConfig: {\n        popupTemplate: function(geo, data) {\n            var country = AllCountriesDataHolder[0].response.find(function(countryData) {\n                if (geo.properties.name == \"United States of America\")\n                    return geo.properties.name\n                else if (geo.properties.name == \"Saudi Arabia\")\n                    return geo.properties.name\n                else if (geo.properties.name == \"United Arab Emirates\")\n                    return geo.properties.name\n                else if (geo.properties.name == \"united Kingdom\")\n                    return geo.properties.name\n                else if (countryData.country == geo.properties.name) {\n\n\n                    return geo.properties.name\n                }\n\n            })\n\n\n\n            return ['<div class=\"hoverinfo\"><strong>',\n                geo.properties.name,\n                `<ul>\n                <li>New: ${numToCommas((country.cases[\"new\"] !== null) ? country.cases[\"new\"] : 0)}</li>\n                <li>Active: ${numToCommas((country.cases[\"active\"] !== null) ? country.cases[\"active\"] : 0)}</li>\n                <li>Critical: ${numToCommas((country.cases[\"critical\"] !== null) ? country.cases[\"critical\"] : 0)}</li>\n                <li>Recovered: ${numToCommas((country.cases[\"recovered\"] !== null) ? country.cases[\"recovered\"] : 0)}</li>\n                <li>New deaths: ${numToCommas((country.deaths[\"new\"] !== null) ? country.deaths[\"new\"] : 0)}</li>\n                <li>total deaths: ${numToCommas((country.deaths[\"total\"] !== null) ? country.deaths[\"total\"] : 0)}</li>\n                 </ul>`,\n                '</strong></div>'\n            ].join('');\n        }\n    }\n})\n\n\n\ndocument.getElementById(\"form\").addEventListener(\"click\", function(event) {\n    event.preventDefault()\n\n});\ndocument.getElementById(\"inp\").addEventListener(\"click\", function(event) {\n    let atag = document.getElementsByClassName('btn')\n\n    // let btn = document.getElementsByClassName('btn')\n    let country = document.getElementById(\"inp\").value;\n    namecountry = \"#\" + country\n\n\n    console.log(atag)\n\n    const newLocal = \"href\";\n    // const name = btn.id\n    // btn.setAttribute(\"name\", \"value\");\n\n    atag[0].setAttribute(newLocal, namecountry)\n\n});\n\nfunction myFunction() {\n\n    let atag = document.getElementsByClassName('btn')\n        // btn.setAttribute(\"href\", country)\n    document.getElementById(atag.href).scrollIntoView();\n\n}\n\nfunction search(string) {\n    window.find(string);\n}\n// var preview = document.querySelectorAll(\"form\");\n// for (var i = 0; i < preview.length; i++) {\n//     preview[i].setAttribute(\"namecountry\", 'href');\n// }"],"names":[],"version":3,"file":"index2.7fbff28d.js.map","sourceRoot":"/__parcel_source_root/"}